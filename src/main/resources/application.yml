spring:
  application:
    name: gateway-server
  cloud:
    gateway:
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins:
              - 'https://localhost:3000'
#              - '*'
            allow-credentials: true
            allowedHeaders: '*'
            allowedMethods:
              - PUT
              - GET
              - POST
              - DELETE
              - OPTIONS
            exposedHeaders: '*' #헤더 값 접근 허용

      routes:
        #매수/매도 서버 (전체 Token 인증 필요)
        - id: trade-server
          uri: lb://TRADE-SERVER
          predicates:
            - Path=api/v1/trade/**
          filters:
            - StripPrefix=3
            - AuthorizationHeaderFilter #Token 인증 필터
        #유저 인증 서버 (Token 인증 필요 X path)
        - id: member-server
          uri: lb://MEMBER-SERVER
          predicates:
            - Path=api/v1/member/**
          filters:
            - StripPrefix=3
        #유저 인증 서버 (Token 인증 필요 O path)
        - id: member-server
          uri: lb://MEMBER-SERVER
          predicates:
            - Path=api/v1/member/**
          filters:
            - StripPrefix=3
            - AuthorizationHeaderFilter #Token 인증 필터

#eureka
eureka:
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
    hostname: localhost
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: ${EUREKA_URl}

#Token
JWT:
  SECRET_KEY: sldkfjsoidfjwoeir12393012809vxcv89usdfkjn1203491iu0isdfl

server:
  port: ${GATEWAY_SERVER}